[1]> (+ 3 (* 2 4))
11
[2]> (guess-my-number)

*** - EVAL: undefined function GUESS-MY-NUMBER
The following restarts are available:
USE-VALUE      :R1      Input a value to be used instead of (FDEFINITION 'GUESS-MY-NUMBER).
RETRY          :R2      Retry
STORE-VALUE    :R3      Input a new value for (FDEFINITION 'GUESS-MY-NUMBER).
ABORT          :R4      Abort main loop
Break 1 [3]> :q
[4]> (defparameter *small* 1)
*SMALL*
[5]> (defparameter *big* 100)
*BIG*
[6]> *small*
1
[7]> small

*** - SYSTEM::READ-EVAL-PRINT: variable SMALL has no value
The following restarts are available:
USE-VALUE      :R1      Input a value to be used instead of SMALL.
STORE-VALUE    :R2      Input a new value for SMALL.
ABORT          :R3      Abort main loop
Break 1 [8]> (defun guess-my-number()
(ash (+ *small* *big*) -1))
GUESS-MY-NUMBER
Break 1 [8]> (guess-my-number)
50
Break 1 [8]> (guess-my-number)
50
Break 1 [8]> (ash 11 1)
22
Break 1 [8]> (ash 11 -1)
5
Break 1 [8]> (defun smaller()
(setf *big* (1- (guess-my-number)))
(guess-my-number))
SMALLER
Break 1 [8]> (defun bigger()
(setf *small* (1+ (guess-my-number)))
(guess-my-number))
BIGGER
Break 1 [8]> bigger

*** - SYSTEM::READ-EVAL-PRINT: variable BIGGER has no value
The following restarts are available:
USE-VALUE      :R1      Input a value to be used instead of BIGGER.
STORE-VALUE    :R2      Input a new value for BIGGER.
ABORT          :R3      Abort debug loop
ABORT          :R4      Abort main loop
Break 2 [9]> (bigger)
75
Break 2 [9]> (bigger)
88
Break 2 [9]> (bigger)
94
Break 2 [9]> (bigger)
97
Break 2 [9]> (bigger)
99
Break 2 [9]> (bigger)
100
Break 2 [9]> (smaller)
99
Break 2 [9]> (defun start-over ()
(defparameter *small* 1
)
(defparameter *big* 100)
(guess-my-number))
START-OVER
Break 2 [9]> (start-over)
50
Break 2 [9]> (let (a 5)
(b 6))

*** - LET: illegal variable specification 5
The following restarts are available:
USE-VALUE      :R1      Input a value to be used instead.
ABORT          :R2      Abort debug loop
ABORT          :R3      Abort debug loop
ABORT          :R4      Abort main loop
Break 3 [10]> (let a 5)
5
Break 3 [10]> a

*** - SYSTEM::READ-EVAL-PRINT: variable A has no value
The following restarts are available:
USE-VALUE      :R1      Input a value to be used instead of A.
STORE-VALUE    :R2      Input a new value for A.
ABORT          :R3      Abort debug loop
ABORT          :R4      Abort debug loop
ABORT          :R5      Abort debug loop
ABORT          :R6      Abort main loop
Break 4 [11]> (a)

*** - EVAL: undefined function A
The following restarts are available:
USE-VALUE      :R1      Input a value to be used instead of (FDEFINITION 'A).
RETRY          :R2      Retry
STORE-VALUE    :R3      Input a new value for (FDEFINITION 'A).
ABORT          :R4      Abort debug loop
ABORT          :R5      Abort debug loop
ABORT          :R6      Abort debug loop
ABORT          :R7      Abort debug loop
ABORT          :R8      Abort main loop
Break 5 [12]> (let b 6)
6
Break 5 [12]> (+ a b)

*** - SYSTEM::READ-EVAL-PRINT: variable A has no value
The following restarts are available:
USE-VALUE      :R1      Input a value to be used instead of A.
STORE-VALUE    :R2      Input a new value for A.
ABORT          :R3      Abort debug loop
ABORT          :R4      Abort debug loop
ABORT          :R5      Abort debug loop
ABORT          :R6      Abort debug loop
ABORT          :R7      Abort debug loop
ABORT          :R8      Abort main loop
Break 6 [13]> (let (a 6))

*** - LET: illegal variable specification 6
The following restarts are available:
USE-VALUE      :R1      Input a value to be used instead.
ABORT          :R2      Abort debug loop
ABORT          :R3      Abort debug loop
ABORT          :R4      Abort debug loop
ABORT          :R5      Abort debug loop
ABORT          :R6      Abort debug loop
ABORT          :R7      Abort debug loop
ABORT          :R8      Abort main loop
Break 7 [14]> :q
[15]> (let (5 a))

*** - LET: illegal variable specification 5
The following restarts are available:
USE-VALUE      :R1      Input a value to be used instead.
ABORT          :R2      Abort main loop
Break 1 [16]> (let ((a 5) (b 6))
(+ a b))
11